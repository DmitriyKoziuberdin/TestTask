// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestTask.AppDb;

#nullable disable

namespace TestTask.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestTask.Models.Catalog", b =>
                {
                    b.Property<int>("CatalogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CatalogId"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ParentCatalogId")
                        .HasColumnType("integer");

                    b.HasKey("CatalogId");

                    b.HasIndex("ParentCatalogId");

                    b.ToTable("Catalogs");

                    b.HasData(
                        new
                        {
                            CatalogId = 1,
                            Name = "Creating Digital Images"
                        },
                        new
                        {
                            CatalogId = 2,
                            Name = "Resources",
                            ParentCatalogId = 1
                        },
                        new
                        {
                            CatalogId = 3,
                            Name = "Evidence",
                            ParentCatalogId = 1
                        },
                        new
                        {
                            CatalogId = 4,
                            Name = "Grafic Products",
                            ParentCatalogId = 1
                        },
                        new
                        {
                            CatalogId = 5,
                            Name = "Primary Sources",
                            ParentCatalogId = 2
                        },
                        new
                        {
                            CatalogId = 6,
                            Name = "Secondary Sources",
                            ParentCatalogId = 2
                        },
                        new
                        {
                            CatalogId = 7,
                            Name = "Process",
                            ParentCatalogId = 4
                        },
                        new
                        {
                            CatalogId = 8,
                            Name = "Final Products",
                            ParentCatalogId = 4
                        });
                });

            modelBuilder.Entity("TestTask.Models.Catalog", b =>
                {
                    b.HasOne("TestTask.Models.Catalog", "ParentCatalog")
                        .WithMany("SubCatalogs")
                        .HasForeignKey("ParentCatalogId");

                    b.Navigation("ParentCatalog");
                });

            modelBuilder.Entity("TestTask.Models.Catalog", b =>
                {
                    b.Navigation("SubCatalogs");
                });
#pragma warning restore 612, 618
        }
    }
}
